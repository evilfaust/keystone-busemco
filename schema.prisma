// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  posts     Post[]    @relation("Post_author")
  createdAt DateTime? @default(now())
}

model Post {
  id       String  @id @default(cuid())
  title    String  @default("")
  content  String  @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?   @relation("Post_author", fields: [authorId], references: [id])
  authorId String? @map("author")
  tags     Tag[]   @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model BusStop {
  id               String     @id @default(cuid())
  name             String     @default("")
  coordinates      String     @default("")
  photo            String     @default("")
  stopTimes        StopTime[] @relation("StopTime_busStop")
  from_Route_stops Route[]    @relation("Route_stops")
  from_Trip_stops  Trip[]     @relation("Trip_stops")
}

model Route {
  id    String    @id @default(cuid())
  name  String    @default("")
  stops BusStop[] @relation("Route_stops")
  trips Trip[]    @relation("Trip_route")
}

model Trip {
  id        String     @id @default(cuid())
  name      String     @default("")
  route     Route?     @relation("Trip_route", fields: [routeId], references: [id])
  routeId   String?    @map("route")
  bus       Bus?       @relation("Trip_bus", fields: [busId], references: [id])
  busId     String?    @map("bus")
  driver    Driver?    @relation("Trip_driver", fields: [driverId], references: [id])
  driverId  String?    @map("driver")
  stops     BusStop[]  @relation("Trip_stops")
  stopTimes StopTime[] @relation("StopTime_trip")

  @@index([routeId])
  @@index([busId])
  @@index([driverId])
}

model StopTime {
  id            String   @id @default(cuid())
  busStop       BusStop? @relation("StopTime_busStop", fields: [busStopId], references: [id])
  busStopId     String?  @map("busStop")
  trip          Trip?    @relation("StopTime_trip", fields: [tripId], references: [id])
  tripId        String?  @map("trip")
  departureTime String   @default("")

  @@index([busStopId])
  @@index([tripId])
}

model Bus {
  id                 String @id @default(cuid())
  registrationNumber String @default("")
  model              String @default("")
  trips              Trip[] @relation("Trip_bus")
}

model Driver {
  id        String @id @default(cuid())
  firstName String @default("")
  lastName  String @default("")
  trips     Trip[] @relation("Trip_driver")
}
